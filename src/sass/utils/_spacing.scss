@use "../vars";
@use "./mixins" as m;
@use "./functions" as fn;

@each $name, $value in vars.$spaces {
	.p-#{$name} {
		padding: $value;
	}
	.py-#{$name} {
		padding-block: $value;
	}
	.px-#{$name} {
		padding-inline: $value;
	}
	.pt-#{$name} {
		padding-top: $value;
	}
	.pb-#{$name} {
		padding-bottom: $value;
	}
	.pl-#{$name} {
		padding-left: $value;
	}
	.pr-#{$name} {
		padding-right: $value;
	}

	.m-#{$name} {
		margin: $value;
	}
	.my-#{$name} {
		margin-block: $value;
	}
	.mx-#{$name} {
		margin-inline: $value;
	}
	.mt-#{$name} {
		margin-top: $value;
	}
	.mb-#{$name} {
		margin-bottom: $value;
	}
	.ml-#{$name} {
		margin-left: $value;
	}
	.mr-#{$name} {
		margin-right: $value;
	}

	.gap-#{$name} {
		gap: $value;
	}

	.column-gap-#{$name} {
		column-gap: $value;
	}

	.row-gap-#{$name} {
		row-gap: $value;
	}
}

.mb-input {
	@include m.mb-input();
}

.pt-ant-space {
	padding-top: fn.antSpace();
}

.pr-ant-space {
	padding-right: fn.antSpace();
}

.pb-ant-space {
	padding-bottom: fn.antSpace();
}

.pl-ant-space {
	padding-left: fn.antSpace();
}

.py-ant-space {
	padding-block: fn.antSpace();
}

.px-ant-space {
	padding-inline: fn.antSpace();
}

.mt-ant-space {
	margin-top: fn.antSpace();
}

.mr-ant-space {
	margin-right: fn.antSpace();
}

.mb-ant-space {
	margin-bottom: fn.antSpace();
}

.ml-ant-space {
	margin-left: fn.antSpace();
}

.my-ant-space {
	margin-block: fn.antSpace();
}

.mx-ant-space {
	margin-inline: fn.antSpace();
}
